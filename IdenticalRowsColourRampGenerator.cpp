#include "IdenticalRowsColourRampGenerator.h"
#include "ColourRampGenerator.h"
#include "ColourRGB565.h"

IdenticalRowsColourRampGenerator::IdenticalRowsColourRampGenerator(const ColourRGB565& tl_,
																   const ColourRGB565& tr_,
																   unsigned int width_,
																   unsigned int height_,
																   unsigned int min_row_,
																   unsigned int min_col_)
																   :
																   ColourRampGenerator(width_, height_, min_row_, min_col_),
																   left_col(tl_),
																   right_col(tr_)
{}

bool IdenticalRowsColourRampGenerator::get_row(unsigned int col_,
				 	 	 	 	 	 	 	   unsigned int row_,
				 	 	 	 	 	 	 	   unsigned int width_,
				 	 	 	 	 	 	 	   unsigned short *pixels)
{
	if(!valid_row(row_) || !valid_col(col_) || get_width() == 1) // can't have width == 1 if generated by create()
		return false;
	for(unsigned int i = 0; i < width_ && valid_col(col_+i); ++i)
	{
		// interpolate along this row by frac
		const float frac = static_cast<float>(col_+i-get_min_col())/static_cast<float>((get_width()-1));
		pixels[i] = ColourRGB565::interpolate(left_col, right_col, frac).get_col();
	}
	return true;
}



